{"version":3,"sources":["firebase/firebase.utils.js","contexts/auth/Auth.context.js","contexts/notification/Notification.context.js","components/navBar/NavBar.component.jsx","components/loginForm/LoginForm.component.jsx","pages/loginPage/LoginPage.component.jsx","components/mainSearchBar/MainSearchBar.component.jsx","utils/utils.js","components/recentlyAddedSoftware/RecentlyAddedSoftware.component.jsx","components/recentlyUpdatedSoftware/RecentlyUpdatedSoftware.component.jsx","pages/homePage/HomePage.component.jsx","utils/config.js","components/registerForm/RegisterForm.component.jsx","pages/registerPage/RegisterPage.component.jsx","components/footer/Footer.component.jsx","components/resetPasswordForm/ResetPasswordForm.component.jsx","pages/resetPasswordPage/ResetPasswordPage.component.jsx","components/profileInformation/ProfileInformation.component.jsx","pages/profilePage/ProfilePage.component.jsx","components/accountSettings/AccountSettings.component.jsx","components/profileSettings/ProfileSettings.component.jsx","pages/settingsPage/SettingsPage.component.jsx","components/notification/Notification.component.jsx","components/protectedRoute/ProtectedRoute.component.jsx","components/usernamePrompt/UsernamePrompt.component.jsx","components/addSoftwareForm/AddSoftwareForm.component.jsx","pages/addSoftwarePage/AddSoftwarePage.component.jsx","pages/softwareInformationPage/SoftwareInformationPage.component.jsx","pages/notFoundPage/NotFoundPage.component.jsx","components/editSoftwareForm/EditSoftwareForm.component.jsx","pages/EditSoftwarePage/EditSoftwarePage.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","GoogleAuthProvider","setCustomParameters","prompt","auth","getAuth","AuthContext","createContext","firebaseUtils","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","customClaims","setCustomClaims","isLoading","setIsLoading","preventRedirect","setPreventRedirect","preventUsernamePrompt","setPreventUsernamePrompt","setUsernameBackend","formattedUsername","a","getIdToken","retrievedIdToken","axios","post","username","headers","Authorization","getIdTokenResult","then","idTokenResult","claims","reauthenticateWithCredential","email","password","credential","value","register","name","userCredentials","user","displayName","login","logout","signOut","resetPassword","updatePassword","currentPassword","newPassword","userCredential","updateProfile","photoUrl","photoURL","checkUsernameAvailability","toLowerCase","trim","response","data","usernameStatus","useEffect","console","log","Provider","NotificationContext","useNotification","NotificationProvider","notification","setNotification","notificationType","setNotificationType","timer","setTimer","timeToLive","setTimeToLive","isNotificationShown","setIsNotificationShown","timeOut","setTimeout","clearTimeout","handleNotification","message","type","ttl","handleDismissNotification","NavBar","history","useHistory","handleLogOut","push","Navbar","bg","variant","expand","sticky","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","NavLink","exact","NavDropdown","title","alignRight","Item","onClick","Divider","LoginForm","validated","setValidated","setEmail","setPassword","from","useLocation","state","pathname","handleSubmit","event","form","currentTarget","preventDefault","checkValidity","stopPropagation","Card","Image","src","width","height","roundedCircle","Body","Form","noValidate","onSubmit","Group","controlId","Label","Control","placeholder","onChange","target","required","Feedback","Button","disabled","LoginPage","Container","Row","Col","md","xl","MainSearchBar","cacheRef","useRef","options","setOptions","query","setQuery","searchSoftware","inputQuery","page","get","totalQueryResultCount","queryResponse","total_count","handleSearch","useCallback","current","InputGroup","Text","labelKey","maxResults","PER_PAGE","minLength","onInputChange","onPaginate","shownResults","cachedQuery","length","newOptions","concat","onSearch","selected","paginate","renderMenuItemChildren","option","_","startCase","version","platform","clearButton","useCache","parseSoftwarePlatform","Error","availablePricing","Set","RecentlyAddedSoftware","softwareList","setSoftwareList","dayjs","extend","relativeTime","Header","ListGroup","map","software","shortDescription","pricing","Badge","includes","createdAt","fromNow","RecentlyUpdatedSoftware","updatedAt","HomePage","ALLOWED_USERNAME_REGEX","ALLOWED_VIDEO_HOST_WHITELIST","RegisterForm","setUsername","setName","confirmPassword","setConfirmPassword","isTermsChecked","setTermsChecked","RegExp","test","Check","label","checked","RegisterPage","Footer","Date","getFullYear","href","rel","ResetPasswordForm","ResetPasswordPage","ProfileInformation","scope","emailVerified","metadata","creationTime","lastSignInTime","ProfilePage","AccountSettings","oldPassword","setOldPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","ProfileSettings","avatarImageUrl","setAvatarImageUrl","updateProfilePromises","inputName","Promise","all","readOnly","defaultValue","SettingsPage","Tabs","defaultActiveKey","Tab","eventKey","Notification","Alert","show","onClose","dismissible","ProtectedRoute","Component","component","otherProps","render","props","location","defaultProps","UsernamePrompt","setShow","handleClose","Modal","onHide","backdrop","keyboard","onExit","Title","AddSoftwareForm","softwareName","setSoftwareName","altSoftwareNames","setAltSoftwareNames","softwareVersion","setSoftwareVersion","setShortDescription","softwareVideoUrl","setSoftwareVideoUrl","softwareDescription","setSoftwareDescription","softwareHomepage","setSoftwareHomepage","softwarePlatform","setSoftwarePlatform","isActiveDevelopment","setIsActiveDevelopment","setPricing","buildOn","setBuildOn","developedBy","setDevelopedBy","maintainedBy","setMaintainedBy","twitterUsername","setTwitterUsername","tags","setTags","splitByNewLineToArrayAndRemoveEmptyElement","stringObject","split","filter","item","compiledObject","altArray","alternativeNames","isURL","protocols","host_whitelist","buildOnArray","developedByArray","maintainedByArray","tagsArray","meta","videoLink","description","homePage","rows","maxLength","Boolean","Number","Array","price","index","AddSoftwarePage","SoftwareInformationPage","useParams","softwareObject","setSoftwareObject","handleDelete","delete","url","controls","pip","plaintext","join","developer","maintainer","OverlayTrigger","overlay","Tooltip","addedByUser","updatedByUser","tag","NotFoundPage","rounded","EditSoftwareForm","initialSoftwareName","setInitialSoftwareName","softwareNameAvailability","patch","has","parseSoftwarePricing","EditSoftwarePage","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9df4e195.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  onAuthStateChanged,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  EmailAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  updateProfile,\r\n  updatePassword,\r\n  sendEmailVerification,\r\n  sendPasswordResetEmail,\r\n  reauthenticateWithCredential,\r\n} from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst provider = new GoogleAuthProvider();\r\nprovider.setCustomParameters({\r\n  prompt: 'select_account',\r\n});\r\n\r\nconst auth = getAuth(app);\r\nconst signInWithGoogle = () => signInWithPopup(auth, provider);\r\n\r\nexport {\r\n  onAuthStateChanged,\r\n  auth,\r\n  signInWithGoogle,\r\n  EmailAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  updateProfile,\r\n  updatePassword,\r\n  sendEmailVerification,\r\n  sendPasswordResetEmail,\r\n  reauthenticateWithCredential,\r\n};\r\n","import {\r\n  useContext, createContext, useEffect, useState,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport * as firebaseUtils from '../../firebase/firebase.utils';\r\n\r\nconst AuthContext = createContext();\r\nconst { auth } = firebaseUtils;\r\n\r\nconst useAuth = () => useContext(AuthContext);\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [customClaims, setCustomClaims] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [preventRedirect, setPreventRedirect] = useState(false);\r\n  const [preventUsernamePrompt, setPreventUsernamePrompt] = useState(false);\r\n\r\n  const setUsernameBackend = async (formattedUsername) => {\r\n    const retrievedIdToken = await auth.currentUser.getIdToken();\r\n    await axios.post(\r\n      `${process.env.REACT_APP_BACKEND_API}users`,\r\n      {\r\n        username: formattedUsername,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${retrievedIdToken}`,\r\n        },\r\n      },\r\n    );\r\n    await auth.currentUser.getIdTokenResult(true).then((idTokenResult) => {\r\n      if (idTokenResult.claims) {\r\n        setCustomClaims(idTokenResult.claims);\r\n      }\r\n    });\r\n  };\r\n\r\n  const register = async (email, password, name = '', username) => {\r\n    const userCredentials = await firebaseUtils.createUserWithEmailAndPassword(\r\n      auth,\r\n      email,\r\n      password,\r\n    );\r\n    await firebaseUtils.updateProfile(userCredentials.user, {\r\n      displayName: name,\r\n    });\r\n    await firebaseUtils.sendEmailVerification(userCredentials.user);\r\n    await setUsernameBackend(username);\r\n  };\r\n\r\n  const login = (email, password) => (\r\n    firebaseUtils.signInWithEmailAndPassword(auth, email, password)\r\n  );\r\n\r\n  const logout = async () => {\r\n    await auth.signOut();\r\n    setCustomClaims(null);\r\n  };\r\n\r\n  const resetPassword = (email) => firebaseUtils.sendPasswordResetEmail(auth, email);\r\n\r\n  const reauthenticateWithCredential = (email, password) => {\r\n    const credential = firebaseUtils.EmailAuthProvider.credential(\r\n      email,\r\n      password,\r\n    );\r\n\r\n    return firebaseUtils.reauthenticateWithCredential(currentUser, credential);\r\n  };\r\n\r\n  const updatePassword = async (currentPassword, newPassword) => {\r\n    const userCredential = await reauthenticateWithCredential(\r\n      currentUser.email,\r\n      currentPassword,\r\n    );\r\n    await firebaseUtils.updatePassword(userCredential.user, newPassword);\r\n  };\r\n\r\n  const updateProfile = (name, photoUrl) => firebaseUtils.updateProfile(currentUser, {\r\n    displayName: name,\r\n    photoURL: photoUrl,\r\n  });\r\n\r\n  const checkUsernameAvailability = async (username) => {\r\n    const formattedUsername = username.toLowerCase().trim();\r\n\r\n    const response = await axios.post(\r\n      `${process.env.REACT_APP_BACKEND_API}users/check`,\r\n      { username: formattedUsername },\r\n    );\r\n\r\n    const status = response.data.usernameStatus;\r\n\r\n    if (status === 'Available') {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    register,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    updatePassword,\r\n    updateProfile,\r\n    customClaims,\r\n    checkUsernameAvailability,\r\n    setUsernameBackend,\r\n    preventRedirect,\r\n    setPreventRedirect,\r\n    preventUsernamePrompt,\r\n    setPreventUsernamePrompt,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unSubscribe = firebaseUtils.onAuthStateChanged(auth, (user) => {\r\n      setCurrentUser(user);\r\n      if (user) {\r\n        user.getIdTokenResult().then((idTokenResult) => {\r\n          if (idTokenResult.claims) {\r\n            setCustomClaims(idTokenResult.claims);\r\n          }\r\n        });\r\n      }\r\n      setIsLoading(false);\r\n      console.log(user);\r\n    });\r\n    // clean up\r\n    return unSubscribe;\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!isLoading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nAuthProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport { AuthProvider, useAuth };\r\n","import {\r\n  useContext, createContext, useState, useEffect,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NotificationContext = createContext();\r\n\r\nconst useNotification = () => useContext(NotificationContext);\r\n\r\nconst NotificationProvider = ({ children }) => {\r\n  const [notification, setNotification] = useState('');\r\n  const [notificationType, setNotificationType] = useState('');\r\n  const [timer, setTimer] = useState(null);\r\n  const [timeToLive, setTimeToLive] = useState(null);\r\n  const [isNotificationShown, setIsNotificationShown] = useState(false);\r\n\r\n  const handleNotification = (message, type = 'primary', ttl = 5000) => {\r\n    setNotification(message);\r\n    setNotificationType(type);\r\n    setTimeToLive(ttl);\r\n    setIsNotificationShown(true);\r\n  };\r\n\r\n  const handleDismissNotification = () => {\r\n    setNotification('');\r\n    setNotificationType('');\r\n    setIsNotificationShown(false);\r\n    clearTimeout(timer);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeOut = setTimeout(() => {\r\n      setNotification('');\r\n      setNotificationType('');\r\n      setIsNotificationShown(false);\r\n    }, timeToLive);\r\n    setTimer(timeOut);\r\n    return () => {\r\n      clearTimeout(timeOut);\r\n    };\r\n  }, [notification, setNotificationType, timeToLive]);\r\n\r\n  const value = {\r\n    handleNotification,\r\n    notification,\r\n    notificationType,\r\n    handleDismissNotification,\r\n    isNotificationShown,\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={value}>\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nNotificationProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport { NotificationProvider, useNotification };\r\n","import Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { NavLink, Link, useHistory } from 'react-router-dom';\r\nimport { AiOutlineHome, AiOutlinePlus } from 'react-icons/ai';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\nimport { useNotification } from '../../contexts/notification/Notification.context';\r\n\r\nimport './NavBar.styles.css';\r\n\r\nconst NavBar = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const { handleNotification } = useNotification();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleLogOut = async () => {\r\n    try {\r\n      await logout();\r\n      handleNotification('Logout successful.', 'info');\r\n      history.push('/');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          Software Repository\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link as={NavLink} exact to=\"/\" className=\"custom-nav-link\">\r\n              <AiOutlineHome />\r\n              <span className=\"ml-1\">Home</span>\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              exact\r\n              to=\"/edit/software/add\"\r\n              className=\"custom-nav-link\"\r\n            >\r\n              <AiOutlinePlus />\r\n              <span className=\"ml-1\">Add Software</span>\r\n            </Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            {!currentUser ? (\r\n              <>\r\n                <Nav.Link as={NavLink} exact to=\"/login\">\r\n                  Login\r\n                </Nav.Link>\r\n                <Nav.Link as={NavLink} exact to=\"/register\">\r\n                  Register\r\n                </Nav.Link>\r\n              </>\r\n            ) : (\r\n              <NavDropdown\r\n                title=\"Account\"\r\n                id=\"collasible-nav-dropdown\"\r\n                alignRight\r\n              >\r\n                <NavDropdown.Item onClick={() => history.push('/profile')}>\r\n                  Profile\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => history.push('/settings')}>\r\n                  Settings\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item onClick={handleLogOut}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { useState } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\nimport { useNotification } from '../../contexts/notification/Notification.context';\r\n\r\nconst LoginForm = () => {\r\n  const [validated, setValidated] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { login } = useAuth();\r\n  const { handleNotification } = useNotification();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { from } = location.state || { from: { pathname: '/' } };\r\n\r\n  const handleSubmit = async (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return false;\r\n    }\r\n\r\n    setValidated(false);\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      await login(email, password);\r\n      handleNotification('Login successful.', 'success');\r\n      history.push(from);\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleNotification('Login not successful.', 'danger');\r\n      setIsLoading(false);\r\n      setEmail('');\r\n      setPassword('');\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <div className=\"d-flex align-items-center justify-content-center mt-5 mb-2\">\r\n          <Image\r\n            src=\"https://plchldr.co/i/128x128?&bg=000000&fc=808080\"\r\n            width=\"128px\"\r\n            height=\"128px\"\r\n            roundedCircle\r\n          />\r\n        </div>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Login</h2>\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(event) => setEmail(event.target.value)}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input your email.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input your password.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\r\n              {isLoading ? 'Logging In' : 'Login'}\r\n            </Button>\r\n            <div className=\"mt-2\">\r\n              Forget your password?{' '}\r\n              <Link to=\"/reset-password\">Reset Password</Link>\r\n            </div>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-4\">\r\n        New to our website? <Link to=\"/register\">Register</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default LoginForm;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LoginForm from '../../components/loginForm/LoginForm.component';\r\n\r\nconst LoginPage = () => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Software Repository | Login</title>\r\n    </Helmet>\r\n    <Row className=\"justify-content-center mt-5\">\r\n      <Col md={8} xl={6}>\r\n        <LoginForm />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default LoginPage;\r\n","import _ from 'lodash';\r\nimport axios from 'axios';\r\nimport { useCallback, useRef, useState } from 'react';\r\nimport { InputGroup } from 'react-bootstrap';\r\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst MainSearchBar = () => {\r\n  const cacheRef = useRef({});\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n\r\n  const PER_PAGE = 50;\r\n\r\n  const searchSoftware = (inputQuery, page = 0) => axios\r\n    .get(\r\n      `${process.env.REACT_APP_BACKEND_API}search/software?q=${inputQuery}&page=${page}&per_page=${PER_PAGE}`,\r\n    )\r\n    .then((response) => response.data)\r\n    .then(({ totalQueryResultCount, queryResponse }) => ({\r\n      options: queryResponse,\r\n      total_count: totalQueryResultCount,\r\n    }));\r\n\r\n  const handleInputChange = (inputQuery) => {\r\n    setQuery(inputQuery);\r\n  };\r\n\r\n  const handlePagination = (event, shownResults) => {\r\n    const cachedQuery = cacheRef.current[query];\r\n\r\n    if (\r\n      cachedQuery.options.length > shownResults\r\n      || cachedQuery.options.length === cachedQuery.total_count\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const page = cachedQuery.page + 1;\r\n\r\n    searchSoftware(query, page).then((response) => {\r\n      const newOptions = cachedQuery.options.concat(response.options);\r\n      cacheRef.current[query] = { ...cachedQuery, options: newOptions, page };\r\n      setIsLoading(false);\r\n      setOptions(newOptions);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * As part of breaking changes in v5 onwards of react-bootstrap-typeahead,\r\n   * if using functional component instead of class component to use useCallBack\r\n   * Resource:\r\n   * https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/Upgrading.md#v50-breaking-changes\r\n   * https://github.com/ericgio/react-bootstrap-typeahead/issues/561#issuecomment-650454677\r\n   */\r\n  const handleSearch = useCallback((inputQuery) => {\r\n    if (cacheRef.current[inputQuery]) {\r\n      setOptions(cacheRef.current[inputQuery].options);\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    searchSoftware(inputQuery).then((response) => {\r\n      cacheRef.current[inputQuery] = { ...response, page: 0 };\r\n      setIsLoading(false);\r\n      setOptions(response.options);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-4\">\r\n        <h1>Software Repository</h1>\r\n        <p className=\"text-muted\">Search for your favourite software</p>\r\n      </div>\r\n      <InputGroup>\r\n        <InputGroup.Text>\r\n          <AiOutlineSearch />\r\n        </InputGroup.Text>\r\n        <AsyncTypeahead\r\n          id=\"main-search-bar\"\r\n          labelKey=\"name\"\r\n          maxResults={PER_PAGE - 1}\r\n          isLoading={isLoading}\r\n          options={options}\r\n          minLength={2}\r\n          onInputChange={handleInputChange}\r\n          onPaginate={handlePagination}\r\n          onSearch={handleSearch}\r\n          onChange={(selected) => {\r\n            if (selected.length === 1) {\r\n              history.push(`/software/${selected[0].id}`);\r\n            }\r\n          }}\r\n          paginate\r\n          placeholder=\"Search for a software via name...\"\r\n          renderMenuItemChildren={(option) => (\r\n            <div key={option.id}>\r\n              <span>{_.startCase(option.name)}</span>\r\n              <div>\r\n                <small>{`Version: ${option.version} Platform: ${option.platform}`}</small>\r\n              </div>\r\n            </div>\r\n          )}\r\n          clearButton\r\n          useCache={false}\r\n        />\r\n      </InputGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainSearchBar;\r\n","import _ from 'lodash';\r\n\r\nconst parseSoftwarePlatform = (platform) => {\r\n  switch (platform) {\r\n    case 'windows':\r\n      return 'Windows';\r\n    case 'linux':\r\n      return 'Linux';\r\n    case 'macos':\r\n      return 'MacOS';\r\n    default:\r\n      throw new Error(`Invalid Platform: ${platform}`);\r\n  }\r\n};\r\n\r\nconst availablePricing = new Set([\r\n  'free',\r\n  'paid subscription based',\r\n  'paid subscription based with free option',\r\n  'paid subscription based with free trial',\r\n  'paid one time',\r\n  'paid one time with free option',\r\n  'paid one time with free trial',\r\n  'paid tiered pricing',\r\n  'paid tiered pricing with free option',\r\n  'paid tiered pricing with free trial',\r\n]);\r\n\r\nconst parseSoftwarePricing = (pricing) => {\r\n  if (availablePricing.has(pricing)) {\r\n    return _.startCase(pricing);\r\n  }\r\n  throw new Error(`Invalid Pricing: ${pricing}`);\r\n};\r\n\r\nexport { parseSoftwarePlatform, availablePricing, parseSoftwarePricing };\r\n","import axios from 'axios';\r\nimport _ from 'lodash';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { useState, useEffect } from 'react';\r\nimport { Card, ListGroup, Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { parseSoftwarePlatform } from '../../utils/utils';\r\n\r\nconst RecentlyAddedSoftware = () => {\r\n  const [softwareList, setSoftwareList] = useState([]);\r\n  dayjs.extend(relativeTime);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_BACKEND_API}software/added/recent?count=5`)\r\n      .then((response) => response.data)\r\n      .then((data) => setSoftwareList(data));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header>Recently Added Software</Card.Header>\r\n        <ListGroup variant=\"flush\">\r\n          {softwareList.map((software) => (\r\n            <ListGroup.Item key={software.id}>\r\n              <Link to={`/software/${software.id}`}>\r\n                <h4>{_.startCase(software.name)}</h4>\r\n              </Link>\r\n              <p className=\"text-muted text-justify\">\r\n                {software.shortDescription}\r\n              </p>\r\n              {software.pricing ? (\r\n                <h5>\r\n                  <Badge\r\n                    variant={\r\n                      software.pricing.toLowerCase().includes('free')\r\n                        ? 'success'\r\n                        : 'primary'\r\n                    }\r\n                    disabled\r\n                  >\r\n                    {_.startCase(software.pricing)}\r\n                  </Badge>{' '}\r\n                  <Badge variant=\"info\">\r\n                    {`Platform: ${parseSoftwarePlatform(software.platform)}`}\r\n                  </Badge>\r\n                </h5>\r\n              ) : null}\r\n              <p className=\"text-muted\">\r\n                Added {dayjs(software.createdAt).fromNow()}\r\n              </p>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecentlyAddedSoftware;\r\n","import axios from 'axios';\r\nimport _ from 'lodash';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { useState, useEffect } from 'react';\r\nimport { Card, ListGroup, Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { parseSoftwarePlatform } from '../../utils/utils';\r\n\r\nconst RecentlyUpdatedSoftware = () => {\r\n  const [softwareList, setSoftwareList] = useState([]);\r\n  dayjs.extend(relativeTime);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_BACKEND_API}software/updates/recent?count=5`)\r\n      .then((response) => response.data)\r\n      .then((data) => setSoftwareList(data));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header>Recently Updated Software</Card.Header>\r\n        <ListGroup variant=\"flush\">\r\n          {softwareList.map((software) => (\r\n            <ListGroup.Item key={software.id}>\r\n              <Link to={`/software/${software.id}`}>\r\n                <h4>{_.startCase(software.name)}</h4>\r\n              </Link>\r\n              <p className=\"text-muted text-justify\">\r\n                {software.shortDescription}\r\n              </p>\r\n              {software.pricing ? (\r\n                <h5>\r\n                  <Badge\r\n                    variant={\r\n                      software.pricing.toLowerCase().includes('free')\r\n                        ? 'success'\r\n                        : 'primary'\r\n                    }\r\n                    disabled\r\n                  >\r\n                    {_.startCase(software.pricing)}\r\n                  </Badge>{' '}\r\n                  <Badge variant=\"info\">\r\n                    {`Platform: ${parseSoftwarePlatform(software.platform)}`}\r\n                  </Badge>\r\n                </h5>\r\n              ) : null}\r\n              <p className=\"text-muted\">\r\n                Updated {dayjs(software.updatedAt).fromNow()}\r\n              </p>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecentlyUpdatedSoftware;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport MainSearchBar from '../../components/mainSearchBar/MainSearchBar.component';\r\nimport RecentlyAddedSoftware from '../../components/recentlyAddedSoftware/RecentlyAddedSoftware.component';\r\nimport RecentlyUpdatedSoftware from '../../components/recentlyUpdatedSoftware/RecentlyUpdatedSoftware.component';\r\n\r\nconst HomePage = () => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Software Repository | Home</title>\r\n    </Helmet>\r\n    <Row className=\"justify-content-center text-center mt-5\">\r\n      <Col md={8} xl={6}>\r\n        <MainSearchBar />\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"justify-content-center mt-5\">\r\n      <Col className=\"my-2\" md={8} xl={6}>\r\n        <RecentlyAddedSoftware />\r\n      </Col>\r\n      <Col className=\"my-2\" md={8} xl={6}>\r\n        <RecentlyUpdatedSoftware />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default HomePage;\r\n","const ALLOWED_USERNAME_REGEX = '^[a-z0-9_]+$';\r\n\r\nconst ALLOWED_VIDEO_HOST_WHITELIST = [\r\n  'youtube.com',\r\n  'vimeo.com',\r\n  'www.youtube.com',\r\n  'www.vimeo.com',\r\n];\r\n\r\nexport { ALLOWED_USERNAME_REGEX, ALLOWED_VIDEO_HOST_WHITELIST };\r\n","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\nimport { useNotification } from '../../contexts/notification/Notification.context';\r\nimport { ALLOWED_USERNAME_REGEX } from '../../utils/config';\r\n\r\nconst RegisterForm = () => {\r\n  const [validated, setValidated] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [isTermsChecked, setTermsChecked] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    checkUsernameAvailability,\r\n    setPreventRedirect,\r\n    setPreventUsernamePrompt,\r\n  } = useAuth();\r\n  const { handleNotification } = useNotification();\r\n\r\n  const handleSubmit = async (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return false;\r\n    }\r\n\r\n    setValidated(false);\r\n    const formattedUsername = username.toLowerCase().trim();\r\n\r\n    if (!RegExp(ALLOWED_USERNAME_REGEX).test(formattedUsername)) {\r\n      handleNotification(\r\n        <>\r\n          Please ensure the username only contains{' '}\r\n          <strong>alphanumeric characters and/or underscores</strong>.\r\n        </>,\r\n        'danger',\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      handleNotification('Please ensure the password matches.', 'danger');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setPreventRedirect(true);\r\n      setPreventUsernamePrompt(true);\r\n      const isAvailable = await checkUsernameAvailability(formattedUsername);\r\n      if (!isAvailable) {\r\n        handleNotification(\r\n          'The username is already in use. Please input a different username.',\r\n          'danger',\r\n        );\r\n        return false;\r\n      }\r\n      await register(email, password, name, formattedUsername);\r\n      handleNotification(\r\n        'Registration successful. Please check your inbox to verify your email address.',\r\n        'success',\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleNotification('Registration not successful.', 'danger');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setUsername('');\r\n      setName('');\r\n      setEmail('');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n      setTermsChecked(false);\r\n      setPreventUsernamePrompt(false);\r\n      setPreventRedirect(false);\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <div className=\"d-flex align-items-center justify-content-center mt-5 mb-2\">\r\n          <Image\r\n            src=\"https://plchldr.co/i/128x128?&bg=000000&fc=808080\"\r\n            width=\"128px\"\r\n            height=\"128px\"\r\n            roundedCircle\r\n          />\r\n        </div>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Register</h2>\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter desired username\"\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input your desired username.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(event) => setName(event.target.value)}\r\n                required\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                The name will be how we will address you in our mail to you.\r\n              </Form.Text>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input your name.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(event) => setEmail(event.target.value)}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input your email.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                minLength=\"6\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input your password and ensure that it has a minimum\r\n                length of 6 characters.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                minLength=\"6\"\r\n                value={confirmPassword}\r\n                onChange={(event) => setConfirmPassword(event.target.value)}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please confirm your password and ensure that it has a minimum\r\n                length of 6 characters.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"termsAndConditionsCheckbox\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"I agree to the Terms of Service and Privacy Policy\"\r\n                checked={isTermsChecked}\r\n                onChange={() => setTermsChecked(!isTermsChecked)}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                You must agree to the Terms and conditions.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\r\n              {isLoading ? 'Registering' : 'Register'}\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-4\">\r\n        Already have an Account? <Link to=\"/login\">Login</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default RegisterForm;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport RegisterForm from '../../components/registerForm/RegisterForm.component';\r\n\r\nconst RegisterPage = () => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Software Repository | Register</title>\r\n    </Helmet>\r\n    <Row className=\"justify-content-center mt-5\">\r\n      <Col md={8} xl={6}>\r\n        <RegisterForm />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default RegisterPage;\r\n","import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst Footer = () => (\r\n  <Container>\r\n    <Row className=\"justify-content-center text-center\">\r\n      <Col>\r\n        <p className=\"d-inline text-muted pr-2 pl-2\">\r\n          © {new Date().getFullYear()} Software Repository |\r\n        </p>\r\n        <p className=\"d-inline text-muted\">JonathanLeeWH ❤️ |</p>\r\n        <a\r\n          href=\"https://github.com/JonathanLeeWH\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"d-inline pl-2\"\r\n        >\r\n          GitHub\r\n        </a>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\nexport default Footer;\r\n","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\nimport { useNotification } from '../../contexts/notification/Notification.context';\r\n\r\nconst ResetPasswordForm = () => {\r\n  const [validated, setValidated] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { resetPassword } = useAuth();\r\n  const { handleNotification } = useNotification();\r\n\r\n  const handleSubmit = async (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return false;\r\n    }\r\n\r\n    setValidated(false);\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      await resetPassword(email);\r\n      handleNotification(\r\n        'Reset Password successful. Please check your inbox for the instructions to reset your password.',\r\n        'success',\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleNotification('Reset Password not successful.', 'danger');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setEmail('');\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <div className=\"d-flex align-items-center justify-content-center mt-5 mb-2\">\r\n          <Image\r\n            src=\"https://plchldr.co/i/128x128?&bg=000000&fc=808080\"\r\n            width=\"128px\"\r\n            height=\"128px\"\r\n            roundedCircle\r\n          />\r\n        </div>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Reset Password</h2>\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(event) => {\r\n                  setEmail(event.target.value);\r\n                }}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input your email.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\r\n              {isLoading ? 'Loading' : 'Reset Password'}\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-4\">\r\n        Return to <Link to=\"/login\">Login</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ResetPasswordForm;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ResetPasswordForm from '../../components/resetPasswordForm/ResetPasswordForm.component';\r\n\r\nconst ResetPasswordPage = () => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Software Repository | Reset Password</title>\r\n    </Helmet>\r\n    <Row className=\"justify-content-center mt-5\">\r\n      <Col md={8} xl={6}>\r\n        <ResetPasswordForm />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default ResetPasswordPage;\r\n","import { Card, Image } from 'react-bootstrap';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\n\r\nconst ProfileInformation = () => {\r\n  const { currentUser, customClaims } = useAuth();\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header>Profile Information</Card.Header>\r\n        <div className=\"text-center\">\r\n          <Image\r\n            className=\"mt-4 mb-4\"\r\n            src=\"https://plchldr.co/i/128x128?&bg=000000&fc=808080\"\r\n            width=\"128px\"\r\n            height=\"128px\"\r\n            roundedCircle\r\n          />\r\n        </div>\r\n        <table className=\"table\">\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">Username</th>\r\n              <td>\r\n                {!customClaims ? '' : customClaims.username}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Email</th>\r\n              <td>{currentUser.email}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Name</th>\r\n              <td>{currentUser.displayName}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Verified Email</th>\r\n              <td>{currentUser.emailVerified ? 'Verified' : 'Not Verified'}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Joined On</th>\r\n              <td>{currentUser.metadata.creationTime}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Last Login</th>\r\n              <td>{currentUser.metadata.lastSignInTime}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInformation;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ProfileInformation from '../../components/profileInformation/ProfileInformation.component';\r\n\r\nconst ProfilePage = () => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Software Repository | Profile</title>\r\n    </Helmet>\r\n    <Row className=\"justify-content-center mt-5\">\r\n      <Col md={8} xl={6}>\r\n        <ProfileInformation />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default ProfilePage;\r\n","import { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\nimport { useNotification } from '../../contexts/notification/Notification.context';\r\n\r\nconst AccountSettings = () => {\r\n  const [validated, setValidated] = useState(false);\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { updatePassword } = useAuth();\r\n  const { handleNotification } = useNotification();\r\n\r\n  const handleSubmit = async (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return false;\r\n    }\r\n\r\n    setValidated(false);\r\n\r\n    if (oldPassword === newPassword) {\r\n      handleNotification(\r\n        'Please ensure that the new password is different from the old password.',\r\n        'danger',\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (newPassword !== confirmNewPassword) {\r\n      handleNotification(\r\n        'Please ensure that the new password and confirm new password matches.',\r\n        'danger',\r\n      );\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      await updatePassword(oldPassword, newPassword);\r\n      handleNotification('Password change successful.', 'success');\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleNotification('Password change not successful.', 'danger');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setOldPassword('');\r\n      setNewPassword('');\r\n      setConfirmNewPassword('');\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Account Settings</h2>\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"oldPassword\">\r\n              <Form.Label>Old Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Old Password\"\r\n                value={oldPassword}\r\n                onChange={(event) => setOldPassword(event.target.value)}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input your old password.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"newPassword\">\r\n              <Form.Label>New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"New Password\"\r\n                value={newPassword}\r\n                onChange={(event) => setNewPassword(event.target.value)}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input your new password.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"confirmNewPassword\">\r\n              <Form.Label>Confirm New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm New Password\"\r\n                value={confirmNewPassword}\r\n                onChange={(event) => setConfirmNewPassword(event.target.value)}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please confirm your new password.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\r\n              {isLoading ? 'Loading' : 'Submit'}\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountSettings;\r\n","import { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\nimport { useNotification } from '../../contexts/notification/Notification.context';\r\n\r\nconst ProfileSettings = () => {\r\n  const { updateProfile, currentUser, customClaims } = useAuth();\r\n  const { handleNotification } = useNotification();\r\n\r\n  const [validated, setValidated] = useState(false);\r\n  const [avatarImageUrl, setAvatarImageUrl] = useState(null);\r\n  const [name, setName] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    // To be used in future when there are more fields available to update.\r\n    const updateProfilePromises = [];\r\n\r\n    event.preventDefault();\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return false;\r\n    }\r\n\r\n    setValidated(false);\r\n\r\n    const inputName = name.trim();\r\n\r\n    if (\r\n      (inputName && inputName !== currentUser.displayName)\r\n      || (avatarImageUrl && avatarImageUrl !== currentUser.photoURL)\r\n    ) {\r\n      updateProfilePromises.push(updateProfile(inputName, avatarImageUrl));\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      if (updateProfilePromises.length > 0) {\r\n        await Promise.all(updateProfilePromises);\r\n        handleNotification('Profile Settings successfully updated.', 'success');\r\n      } else {\r\n        handleNotification('No Profile Settings changes made.');\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleNotification('Profile Settings update not successful.', 'danger');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setName('');\r\n      setAvatarImageUrl(null);\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Profile Settings</h2>\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={!customClaims ? '' : customClaims.username}\r\n                readOnly\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input a valid username.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(event) => setName(event.target.value)}\r\n                defaultValue={currentUser.displayName}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input your name.\r\n              </Form.Control.Feedback>\r\n              <Form.Text className=\"text-muted\">\r\n                You can leave the name unchanged if you do not want to update\r\n                the name.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"avatarImageUrl\">\r\n              <Form.Label>Avatar Image Url</Form.Label>\r\n              <Form.Control\r\n                type=\"url\"\r\n                onChange={(event) => setAvatarImageUrl(event.target.value)}\r\n                defaultValue={currentUser.photoURL ? currentUser.photoURL : ''}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input a valid image url.\r\n              </Form.Control.Feedback>\r\n              <Form.Text className=\"text-muted\">\r\n                You can leave the url unchanged if you do not want to update the\r\n                image url.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\r\n              {isLoading ? 'Loading' : 'Submit'}\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileSettings;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport AccountSettings from '../../components/accountSettings/AccountSettings.component';\r\nimport ProfileSettings from '../../components/profileSettings/ProfileSettings.component';\r\n\r\nconst SettingsPage = () => (\r\n  <>\r\n    <Container>\r\n      <Helmet>\r\n        <title>Software Repository | Settings</title>\r\n      </Helmet>\r\n      <Row className=\"justify-content-center mt-5\">\r\n        <Col md={8} xl={6}>\r\n          <Tabs defaultActiveKey=\"account\" id=\"uncontrolled-tab-example\">\r\n            <Tab eventKey=\"account\" title=\"Account\">\r\n              <AccountSettings />\r\n            </Tab>\r\n            <Tab eventKey=\"profile\" title=\"Profile\">\r\n              <ProfileSettings />\r\n            </Tab>\r\n          </Tabs>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </>\r\n);\r\n\r\nexport default SettingsPage;\r\n","import Alert from 'react-bootstrap/Alert';\r\nimport { useNotification } from '../../contexts/notification/Notification.context';\r\n\r\nimport './Notification.styles.css';\r\n\r\nconst Notification = () => {\r\n  const {\r\n    notification,\r\n    notificationType,\r\n    handleDismissNotification,\r\n    isNotificationShown,\r\n  } = useNotification();\r\n\r\n  return (\r\n    <div className=\"text-center fixed-top ml-auto mr-auto mt-5 notification-container\">\r\n      <Alert\r\n        show={isNotificationShown}\r\n        onClose={handleDismissNotification}\r\n        variant={notificationType}\r\n        dismissible\r\n      >\r\n        {notification}\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...otherProps }) => {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...otherProps}\r\n      render={\r\n        // eslint-disable-next-line no-confusing-arrow\r\n        (props) =>\r\n          // eslint-disable-next-line implicit-arrow-linebreak\r\n          currentUser ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        // eslint-disable-next-line react/jsx-curly-newline\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n  component: PropTypes.func.isRequired,\r\n  location: PropTypes.oneOfType([PropTypes.object]),\r\n};\r\n\r\nProtectedRoute.defaultProps = {\r\n  location: {\r\n    state: {\r\n      from: '/',\r\n    },\r\n  },\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\nimport { useNotification } from '../../contexts/notification/Notification.context';\r\nimport { ALLOWED_USERNAME_REGEX } from '../../utils/config';\r\n\r\nconst UsernamePrompt = () => {\r\n  const [show, setShow] = useState(true);\r\n  const [validated, setValidated] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { logout, setUsernameBackend, checkUsernameAvailability } = useAuth();\r\n\r\n  const { handleNotification } = useNotification();\r\n\r\n  const handleSubmit = async (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return false;\r\n    }\r\n\r\n    setValidated(false);\r\n    const formattedUsername = username.toLowerCase().trim();\r\n\r\n    if (!RegExp(ALLOWED_USERNAME_REGEX).test(formattedUsername)) {\r\n      handleNotification(\r\n        <>\r\n          Please ensure the username only contains{' '}\r\n          <strong>alphanumeric characters and/or underscores</strong>.\r\n        </>,\r\n        'danger',\r\n      );\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const isAvailable = await checkUsernameAvailability(formattedUsername);\r\n      if (!isAvailable) {\r\n        handleNotification(\r\n          'The username is already in use. Please input a different username.',\r\n          'danger',\r\n        );\r\n        setIsLoading(false);\r\n        setUsername('');\r\n        return false;\r\n      }\r\n      await setUsernameBackend(formattedUsername);\r\n      handleNotification('Username Setup successful.', 'success');\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleNotification('Username Setup not successful.', 'danger');\r\n      setIsLoading(false);\r\n      setUsername('');\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleClose = async () => {\r\n    setShow(false);\r\n    await logout();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        onExit={handleClose}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Username Setup</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            It seems your account is currently not linked to any username.\r\n            Please set up your username by filling in the form below.\r\n          </p>\r\n          <Form\r\n            noValidate\r\n            validated={validated}\r\n            onSubmit={handleSubmit}\r\n            id=\"usernamePromptForm\"\r\n          >\r\n            <Form.Group controlId=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter desired username\"\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n                required\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Your username should only contain{' '}\r\n                <strong>alphanumeric characters and/or underscores.</strong>\r\n              </Form.Text>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please input your desired username.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n          <p className=\"mt-3\">\r\n            <strong>Note: </strong> As every account must have a valid username\r\n            linked to it, closing the prompt will log you out of the Account.\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            disabled={isLoading}\r\n            variant=\"secondary\"\r\n            onClick={handleClose}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            disabled={isLoading}\r\n            variant=\"primary\"\r\n            form=\"usernamePromptForm\"\r\n            type=\"submit\"\r\n          >\r\n            {isLoading ? 'Registering Username' : 'Register Username'}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsernamePrompt;\r\n","import _ from 'lodash';\r\nimport { useState } from 'react';\r\nimport { InputGroup } from 'react-bootstrap';\r\nimport { AiOutlineTwitter } from 'react-icons/ai';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport isURL from 'validator/lib/isURL';\r\nimport { useNotification } from '../../contexts/notification/Notification.context';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\nimport { availablePricing } from '../../utils/utils';\r\nimport { ALLOWED_VIDEO_HOST_WHITELIST } from '../../utils/config';\r\n\r\nconst AddSoftwareForm = () => {\r\n  const [validated, setValidated] = useState(false);\r\n  const [softwareName, setSoftwareName] = useState('');\r\n  const [altSoftwareNames, setAltSoftwareNames] = useState('');\r\n  const [softwareVersion, setSoftwareVersion] = useState('');\r\n  const [shortDescription, setShortDescription] = useState('');\r\n  const [softwareVideoUrl, setSoftwareVideoUrl] = useState('');\r\n  const [softwareDescription, setSoftwareDescription] = useState('');\r\n  const [softwareHomepage, setSoftwareHomepage] = useState('');\r\n  const [softwarePlatform, setSoftwarePlatform] = useState('Windows');\r\n  const [isActiveDevelopment, setIsActiveDevelopment] = useState(true);\r\n  const [pricing, setPricing] = useState('Free');\r\n  const [buildOn, setBuildOn] = useState('');\r\n  const [developedBy, setDevelopedBy] = useState('');\r\n  const [maintainedBy, setMaintainedBy] = useState('');\r\n  const [twitterUsername, setTwitterUsername] = useState('');\r\n  const [tags, setTags] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { handleNotification } = useNotification();\r\n\r\n  const { currentUser } = useAuth();\r\n\r\n  const splitByNewLineToArrayAndRemoveEmptyElement = (stringObject) => stringObject.split('\\n').filter((item) => item);\r\n\r\n  const handleSubmit = async (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return false;\r\n    }\r\n\r\n    setValidated(false);\r\n\r\n    let compiledObject = {};\r\n\r\n    if (altSoftwareNames) {\r\n      const altArray = splitByNewLineToArrayAndRemoveEmptyElement(altSoftwareNames);\r\n      compiledObject.alternativeNames = altArray;\r\n    }\r\n    if (\r\n      softwareVideoUrl\r\n      && !isURL(softwareVideoUrl, {\r\n        protocols: ['http', 'https'],\r\n        host_whitelist: ALLOWED_VIDEO_HOST_WHITELIST,\r\n      })\r\n    ) {\r\n      handleNotification(\r\n        'The input Software Video URL is an invalid url. Please ensure the input Software Video URL is valid. Note: Only youtube.com or vimeo.com video providers are supported. An example: https://vimeo.com/573268564',\r\n        'danger',\r\n      );\r\n      return false;\r\n    }\r\n    if (buildOn) {\r\n      const buildOnArray = splitByNewLineToArrayAndRemoveEmptyElement(buildOn);\r\n      compiledObject.buildOn = buildOnArray;\r\n    }\r\n    if (\r\n      softwareHomepage\r\n      && !isURL(softwareHomepage, {\r\n        protocols: ['http', 'https'],\r\n      })\r\n    ) {\r\n      handleNotification(\r\n        'The input Software Homepage is an invalid url. Please ensure the input Software Homepage url is valid.',\r\n        'danger',\r\n      );\r\n      return false;\r\n    }\r\n    if (shortDescription.length === 0 || shortDescription.length > 100) {\r\n      handleNotification(\r\n        'Please input the software short description and ensure that it only contains between 1 to 100 (inclusive) characters.',\r\n        'danger',\r\n      );\r\n      return false;\r\n    }\r\n    if (developedBy) {\r\n      const developedByArray = splitByNewLineToArrayAndRemoveEmptyElement(developedBy);\r\n      compiledObject.developedBy = developedByArray;\r\n    }\r\n    if (maintainedBy) {\r\n      const maintainedByArray = splitByNewLineToArrayAndRemoveEmptyElement(maintainedBy);\r\n      compiledObject.maintainedBy = maintainedByArray;\r\n    }\r\n    if (tags) {\r\n      const tagsArray = splitByNewLineToArrayAndRemoveEmptyElement(tags);\r\n      compiledObject.meta = {\r\n        ...compiledObject.meta,\r\n        tags: tagsArray,\r\n      };\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const softwareNameAvailability = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND_API}search/software?q=${softwareName}`,\r\n      );\r\n      if (\r\n        softwareNameAvailability.data.queryResponse.filter(\r\n          (item) => item.name.toLowerCase() === softwareName.toLowerCase(),\r\n        ).length > 0\r\n      ) {\r\n        handleNotification(\r\n          'The software name is already in use. Please input a different software name.',\r\n          'danger',\r\n        );\r\n        return false;\r\n      }\r\n\r\n      compiledObject = {\r\n        ...compiledObject,\r\n        name: softwareName,\r\n        version: softwareVersion,\r\n        shortDescription,\r\n        videoLink: softwareVideoUrl,\r\n        description: softwareDescription,\r\n        homePage: softwareHomepage,\r\n        platform: softwarePlatform,\r\n        isActiveDevelopment,\r\n        pricing,\r\n        twitterUsername,\r\n      };\r\n\r\n      console.log(compiledObject);\r\n\r\n      const retrievedIdToken = await currentUser.getIdToken();\r\n      await axios.post(\r\n        `${process.env.REACT_APP_BACKEND_API}software`,\r\n        compiledObject,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${retrievedIdToken}`,\r\n          },\r\n        },\r\n      );\r\n      handleNotification('Software successfully added.', 'success');\r\n      setSoftwareName('');\r\n      setAltSoftwareNames('');\r\n      setSoftwareVersion('');\r\n      setShortDescription('');\r\n      setSoftwareVideoUrl('');\r\n      setSoftwareDescription('');\r\n      setSoftwareHomepage('');\r\n      setSoftwarePlatform('Windows');\r\n      setIsActiveDevelopment(true);\r\n      setPricing('Free');\r\n      setBuildOn('');\r\n      setDevelopedBy('');\r\n      setMaintainedBy('');\r\n      setTwitterUsername('');\r\n      setTags('');\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleNotification('Addition of Software not successful.', 'danger');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"name\">\r\n            <Form.Label>Software Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Software Name\"\r\n              value={softwareName}\r\n              onChange={(event) => {\r\n                setSoftwareName(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the software name.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"altSoftwareNames\">\r\n            <Form.Label>Alternative Software Name(s)</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Enter each Alternative Software Name on a new line.\"\r\n              rows={5}\r\n              value={altSoftwareNames}\r\n              onChange={(event) => {\r\n                setAltSoftwareNames(event.target.value);\r\n              }}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Each input alternative software names must be on a new line.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"version\">\r\n            <Form.Label>Software Version</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Software Version\"\r\n              value={softwareVersion}\r\n              onChange={(event) => {\r\n                setSoftwareVersion(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Please input the latest version of the software.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"shortDescription\">\r\n            <Form.Label>Software Short Description</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Enter Software Short Description\"\r\n              maxLength={100}\r\n              rows={5}\r\n              value={shortDescription}\r\n              onChange={(event) => {\r\n                setShortDescription(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              The input software short description allowed maximum length is 100\r\n              characters.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the software short description and ensure that it\r\n              only contains between 1 to 100 (inclusive) characters.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"videoLink\">\r\n            <Form.Label>Software Video URL</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Software Video URL\"\r\n              value={softwareVideoUrl}\r\n              onChange={(event) => {\r\n                setSoftwareVideoUrl(event.target.value);\r\n              }}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Note: Only youtube.com or vimeo.com video providers are supported.\r\n              An example: https://vimeo.com/573268564\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input a valid url. An example: https://github.com/user/repo\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"description\">\r\n            <Form.Label>Software Description</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Enter Software Description\"\r\n              rows={5}\r\n              value={softwareDescription}\r\n              onChange={(event) => {\r\n                setSoftwareDescription(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the software description.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"homepage\">\r\n            <Form.Label>Software Homepage URL</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Software Homepage URL\"\r\n              value={softwareHomepage}\r\n              onChange={(event) => {\r\n                setSoftwareHomepage(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input a valid url. An example: https://github.com/user/repo\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"platform\">\r\n            <Form.Label>Platform</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={softwarePlatform}\r\n              onChange={(event) => {\r\n                setSoftwarePlatform(event.target.value);\r\n              }}\r\n              required\r\n            >\r\n              <option>Windows</option>\r\n              <option>Linux</option>\r\n              <option>MacOS</option>\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please select the software platform.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"isActiveDevelopment\">\r\n            <Form.Label>Active Development</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={isActiveDevelopment ? '1' : '0'}\r\n              onChange={(event) => {\r\n                setIsActiveDevelopment(Boolean(Number(event.target.value)));\r\n              }}\r\n              required\r\n            >\r\n              <option value=\"1\">True</option>\r\n              <option value=\"0\">False</option>\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the active development status.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"pricing\">\r\n            <Form.Label>Pricing</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={pricing}\r\n              onChange={(event) => {\r\n                setPricing(event.target.value);\r\n              }}\r\n              required\r\n            >\r\n              {Array.from(availablePricing).map((price, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <option key={index}>{_.startCase(price)}</option>\r\n              ))}\r\n            </Form.Control>\r\n            <Form.Text className=\"text-muted\">\r\n              Please select the appropriate software pricing model that best\r\n              matches the software.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the software pricing model.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"buildOn\">\r\n            <Form.Label>Build On</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder={\r\n                'Enter each input must be on a new line.\\nAn example:\\nPython\\nNode.js\\n'\r\n              }\r\n              rows={5}\r\n              value={buildOn}\r\n              onChange={(event) => {\r\n                setBuildOn(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Each input must be on a new line.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the technologies which the software is build on.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"developedBy\">\r\n            <Form.Label>Developed By</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder={\r\n                'Enter each input must be on a new line.\\nAn example: \\nAlex\\nBob\\n'\r\n              }\r\n              rows={5}\r\n              value={developedBy}\r\n              onChange={(event) => {\r\n                setDevelopedBy(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Each input must be on a new line.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the developer(s) of the software.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"maintainedBy\">\r\n            <Form.Label>Maintained By</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder={\r\n                'Enter each input must be on a new line.\\nAn example: \\nAlex\\nBob\\n'\r\n              }\r\n              rows={5}\r\n              value={maintainedBy}\r\n              onChange={(event) => {\r\n                setMaintainedBy(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Each input must be on a new line.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the maintainer(s) of the software. The maintainer(s)\r\n              can be same as the developer(s).\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"twitterUsername\">\r\n            <Form.Label>Software Twitter Username</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Text>\r\n                <AiOutlineTwitter />\r\n              </InputGroup.Text>\r\n              <Form.Control\r\n                placeholder=\"Enter Software Twitter Username\"\r\n                value={twitterUsername}\r\n                onChange={(event) => setTwitterUsername(event.target.value)}\r\n              />\r\n            </InputGroup>\r\n            <Form.Text className=\"text-muted\">\r\n              Please input the software Twitter username if any.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"inputTags\">\r\n            <Form.Label>Tags</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder={\r\n                'Enter each tag must be on a new line.\\nAn example: \\npython\\ndevtools\\n'\r\n              }\r\n              rows={5}\r\n              value={tags}\r\n              onChange={(event) => {\r\n                setTags(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Each tag must be on a new line.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the tags for the software to be added.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\r\n          {isLoading ? 'Adding Software' : 'Add Software'}\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddSoftwareForm;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport AddSoftwareForm from '../../components/addSoftwareForm/AddSoftwareForm.component';\r\n\r\nconst AddSoftwarePage = () => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Software Repository | Add Software</title>\r\n    </Helmet>\r\n    <Row className=\"justify-content-center mt-5\">\r\n      <Col md={8} xl={6}>\r\n        <AddSoftwareForm />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default AddSoftwarePage;\r\n","import _ from 'lodash';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport axios from 'axios';\r\nimport ReactPlayer from 'react-player';\r\nimport isURL from 'validator/lib/isURL';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Image,\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  Form,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from 'react-bootstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {\r\n  AiOutlineDelete,\r\n  AiOutlineEdit,\r\n  AiOutlineHome,\r\n  AiOutlineTwitter,\r\n} from 'react-icons/ai';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\nimport { useNotification } from '../../contexts/notification/Notification.context';\r\nimport { parseSoftwarePlatform } from '../../utils/utils';\r\nimport { ALLOWED_VIDEO_HOST_WHITELIST } from '../../utils/config';\r\n\r\nimport './SoftwareInformationPage.styles.css';\r\n\r\nconst SoftwareInformationPage = () => {\r\n  const { id } = useParams();\r\n  const { currentUser } = useAuth();\r\n  const { handleNotification } = useNotification();\r\n  const history = useHistory();\r\n\r\n  dayjs.extend(relativeTime);\r\n\r\n  const [softwareObject, setSoftwareObject] = useState(null);\r\n\r\n  const handleDelete = async () => {\r\n    const retrievedIdToken = await currentUser.getIdToken();\r\n\r\n    try {\r\n      await axios.delete(`${process.env.REACT_APP_BACKEND_API}software/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${retrievedIdToken}`,\r\n        },\r\n      });\r\n      handleNotification('Software successfully deleted.', 'success');\r\n      history.push('/');\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleNotification('Deletion of Software not successful.', 'danger');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_BACKEND_API}software/${id}`)\r\n      .then((response) => setSoftwareObject(response.data));\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {!softwareObject ? (\r\n        <Container>\r\n          <Helmet>\r\n            <title>Software Repository | Loading</title>\r\n          </Helmet>\r\n          <Row className=\"justify-content-center mt-5\">\r\n            <Col md={10} id=\"app-description-header-col\">\r\n              Loading...\r\n            </Col>\r\n            )\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Helmet>\r\n            <title>\r\n              {`Software Repository | ${_.startCase(softwareObject.name)}`}\r\n            </title>\r\n          </Helmet>\r\n          <Row className=\"justify-content-center mt-5\">\r\n            <Col md={10} id=\"app-description-header-col\">\r\n              <Image\r\n                src=\"https://plchldr.co/i/128x128?&bg=000000&fc=808080\"\r\n                width=\"128px\"\r\n                height=\"128px\"\r\n              />\r\n              <div id=\"app-description-header-info\">\r\n                <h1>{_.startCase(softwareObject.name)}</h1>\r\n                <p className=\"text-muted\">{softwareObject.shortDescription}</p>\r\n                {softwareObject.pricing ? (\r\n                  <h5>\r\n                    <Badge\r\n                      variant={\r\n                        softwareObject.pricing.toLowerCase().includes('free')\r\n                          ? 'success'\r\n                          : 'primary'\r\n                      }\r\n                      disabled\r\n                    >\r\n                      {_.startCase(softwareObject.pricing)}\r\n                    </Badge>{' '}\r\n                    <Badge variant=\"info\">\r\n                      {`Platform: ${parseSoftwarePlatform(\r\n                        softwareObject.platform,\r\n                      )}`}\r\n                    </Badge>{' '}\r\n                    <Badge variant=\"info\">\r\n                      {`Latest Version: ${softwareObject.version}`}\r\n                    </Badge>\r\n                  </h5>\r\n                ) : null}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {softwareObject.videoLink\r\n          && isURL(softwareObject.videoLink, {\r\n            protocols: ['http', 'https'],\r\n            host_whitelist: ALLOWED_VIDEO_HOST_WHITELIST,\r\n          }) ? (\r\n            <Row className=\"justify-content-center mt-5\">\r\n              <Col md={10}>\r\n                <Card>\r\n                  <Card.Header as=\"h4\">Video Preview</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Text>\r\n                      <div className=\"player-wrapper\">\r\n                        <ReactPlayer\r\n                          className=\"react-player\"\r\n                          url={softwareObject.videoLink}\r\n                          height=\"100%\"\r\n                          width=\"100%\"\r\n                          controls\r\n                          pip\r\n                        />\r\n                      </div>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            ) : null}\r\n          <Row className=\"justify-content-center mt-5\">\r\n            <Col md={10}>\r\n              <Card>\r\n                <Card.Header as=\"h4\">Description</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text>{softwareObject.description}</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center mt-5\">\r\n            <Col md={10}>\r\n              <Card>\r\n                <Card.Header as=\"h4\">Information</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <Form>\r\n                      <Form.Row>\r\n                        <Form.Group\r\n                          as={Col}\r\n                          controlId=\"alternative-software-names\"\r\n                        >\r\n                          <Form.Label className=\"font-weight-bold\">\r\n                            Alternative Software Names\r\n                          </Form.Label>\r\n                          {softwareObject.alternativeNames\r\n                          && softwareObject.alternativeNames.length > 0 ? (\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              className=\"borderless-text-area\"\r\n                              rows={softwareObject.alternativeNames.length || 3}\r\n                              plaintext\r\n                              readOnly\r\n                              defaultValue={softwareObject.alternativeNames\r\n                                .map((name) => _.startCase(name))\r\n                                .join('\\n')}\r\n                            />\r\n                            ) : null}\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"build-on\">\r\n                          <Form.Label className=\"font-weight-bold\">\r\n                            Build On\r\n                          </Form.Label>\r\n                          {softwareObject.buildOn\r\n                          && softwareObject.buildOn.length > 0 ? (\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              className=\"borderless-text-area\"\r\n                              rows={softwareObject.buildOn.length || 3}\r\n                              plaintext\r\n                              readOnly\r\n                              defaultValue={softwareObject.buildOn\r\n                                .map((item) => _.startCase(item))\r\n                                .join('\\n')}\r\n                            />\r\n                            ) : null}\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"is-active-dev\">\r\n                          <Form.Label className=\"font-weight-bold\">\r\n                            Development Status\r\n                          </Form.Label>\r\n\r\n                          <Form.Control\r\n                            className=\"borderless-input\"\r\n                            plaintext\r\n                            readOnly\r\n                            defaultValue={\r\n                              softwareObject.isActiveDevelopment\r\n                                ? 'Active'\r\n                                : 'Inactive'\r\n                            }\r\n                          />\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"developed-by\">\r\n                          <Form.Label className=\"font-weight-bold\">\r\n                            Developed By\r\n                          </Form.Label>\r\n                          {softwareObject.developedBy\r\n                          && softwareObject.developedBy.length > 0 ? (\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              className=\"borderless-text-area\"\r\n                              rows={softwareObject.developedBy.length || 3}\r\n                              plaintext\r\n                              readOnly\r\n                              defaultValue={softwareObject.developedBy\r\n                                .map((developer) => _.startCase(developer))\r\n                                .join('\\n')}\r\n                            />\r\n                            ) : null}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"maintained-by\">\r\n                          <Form.Label className=\"font-weight-bold\">\r\n                            Maintained By\r\n                          </Form.Label>\r\n                          {softwareObject.maintainedBy\r\n                          && softwareObject.maintainedBy.length > 0 ? (\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              className=\"borderless-text-area\"\r\n                              rows={softwareObject.maintainedBy.length || 3}\r\n                              plaintext\r\n                              readOnly\r\n                              defaultValue={softwareObject.maintainedBy\r\n                                .map((maintainer) => _.startCase(maintainer))\r\n                                .join('\\n')}\r\n                            />\r\n                            ) : null}\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n                    </Form>\r\n\r\n                    <OverlayTrigger\r\n                      overlay={(\r\n                        <Tooltip>\r\n                          {softwareObject.twitterUsername.length > 0\r\n                            ? 'Access Software Twitter'\r\n                            : 'Software Twitter Not found'}\r\n                        </Tooltip>\r\n                      )}\r\n                    >\r\n                      <span className=\"d-inline-block mt-2\">\r\n                        <Button\r\n                          className=\"mr-2\"\r\n                          variant=\"outline-primary\"\r\n                          href={`https://twitter.com/${softwareObject.twitterUsername}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          disabled={softwareObject.twitterUsername.length === 0}\r\n                        >\r\n                          <AiOutlineTwitter /> Software Twitter\r\n                        </Button>\r\n                      </span>\r\n                    </OverlayTrigger>\r\n                    <OverlayTrigger\r\n                      overlay={<Tooltip>Access Software Homepage</Tooltip>}\r\n                    >\r\n                      <span className=\"d-inline-block mt-2\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          href={softwareObject.homePage}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <AiOutlineHome /> Software Homepage\r\n                        </Button>\r\n                      </span>\r\n                    </OverlayTrigger>\r\n\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center mt-5\">\r\n            <Col md={10}>\r\n              <Card>\r\n                <Card.Header as=\"h4\">Meta</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <Form>\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"added-by-user\">\r\n                          <Form.Label className=\"font-weight-bold\">\r\n                            Added By User\r\n                          </Form.Label>\r\n                          {softwareObject.meta\r\n                          && softwareObject.meta.addedByUser ? (\r\n                            <Form.Control\r\n                              plaintext\r\n                              className=\"borderless-input\"\r\n                              readOnly\r\n                              defaultValue={_.startCase(\r\n                                softwareObject.meta.addedByUser.username,\r\n                              )}\r\n                            />\r\n                            ) : null}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"updated-by-user\">\r\n                          <Form.Label className=\"font-weight-bold\">\r\n                            Updated By User\r\n                          </Form.Label>\r\n                          {softwareObject.meta\r\n                          && softwareObject.meta.updatedByUser ? (\r\n                            <Form.Control\r\n                              className=\"borderless-input\"\r\n                              plaintext\r\n                              readOnly\r\n                              defaultValue={_.startCase(\r\n                                softwareObject.meta.updatedByUser.username,\r\n                              )}\r\n                            />\r\n                            ) : null}\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"added-on\">\r\n                          <Form.Label className=\"font-weight-bold\">\r\n                            Added\r\n                          </Form.Label>\r\n                          <Form.Control\r\n                            className=\"borderless-input\"\r\n                            plaintext\r\n                            readOnly\r\n                            defaultValue={dayjs(\r\n                              softwareObject.createdAt,\r\n                            ).fromNow()}\r\n                          />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"last-updated\">\r\n                          <Form.Label className=\"font-weight-bold\">\r\n                            Last Updated\r\n                          </Form.Label>\r\n                          <Form.Control\r\n                            className=\"borderless-input\"\r\n                            plaintext\r\n                            readOnly\r\n                            defaultValue={dayjs(\r\n                              softwareObject.updatedAt,\r\n                            ).fromNow()}\r\n                          />\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"tags\">\r\n                          <Form.Label className=\"font-weight-bold\">\r\n                            Tags\r\n                          </Form.Label>\r\n                          {softwareObject.meta\r\n                          && softwareObject.meta.tags.length > 0 ? (\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              className=\"borderless-text-area\"\r\n                              rows={softwareObject.meta.tags.length || 3}\r\n                              plaintext\r\n                              readOnly\r\n                              defaultValue={softwareObject.meta.tags\r\n                                .map((tag) => _.startCase(tag))\r\n                                .join('\\n')}\r\n                            />\r\n                            ) : null}\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n                    </Form>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center mt-4 mb-3 text-right\">\r\n            <Col md={10} id=\"edit-delete-buttons\">\r\n              <Button\r\n                className=\"mr-2\"\r\n                variant=\"outline-secondary\"\r\n                onClick={() => {\r\n                  history.push(`/edit/software/${id}`);\r\n                }}\r\n              >\r\n                <AiOutlineEdit /> Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"outline-danger\"\r\n                onClick={() => {\r\n                  handleDelete();\r\n                }}\r\n              >\r\n                <AiOutlineDelete /> Delete\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SoftwareInformationPage;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFoundPage = () => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Software Repository | Page not found</title>\r\n    </Helmet>\r\n    <Row className=\"justify-content-center text-center mt-5\">\r\n      <Col md={8} xl={6}>\r\n        <div className=\"d-flex align-items-center justify-content-center mt-5 mb-2\">\r\n          <Image\r\n            src=\"https://plchldr.co/i/128x128?&bg=000000&fc=808080\"\r\n            width=\"128px\"\r\n            height=\"128px\"\r\n            rounded\r\n          />\r\n        </div>\r\n        <h1>Not Found (404)</h1>\r\n        <p>\r\n          Our apologises, we are unable to find the page you are looking for.\r\n          Please ensure that you have input a valid url. Thank you.\r\n        </p>\r\n        <Link to=\"/\">Back to Homepage</Link>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import _ from 'lodash';\r\nimport { useEffect, useState } from 'react';\r\nimport { InputGroup } from 'react-bootstrap';\r\nimport { AiOutlineTwitter } from 'react-icons/ai';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport isURL from 'validator/lib/isURL';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNotification } from '../../contexts/notification/Notification.context';\r\nimport { useAuth } from '../../contexts/auth/Auth.context';\r\nimport {\r\n  availablePricing,\r\n  parseSoftwarePlatform,\r\n  parseSoftwarePricing,\r\n} from '../../utils/utils';\r\nimport { ALLOWED_VIDEO_HOST_WHITELIST } from '../../utils/config';\r\n\r\nconst EditSoftwareForm = () => {\r\n  const { id } = useParams();\r\n\r\n  const [validated, setValidated] = useState(false);\r\n  const [initialSoftwareName, setInitialSoftwareName] = useState('');\r\n  const [softwareName, setSoftwareName] = useState('');\r\n  const [altSoftwareNames, setAltSoftwareNames] = useState('');\r\n  const [softwareVersion, setSoftwareVersion] = useState('');\r\n  const [shortDescription, setShortDescription] = useState('');\r\n  const [softwareVideoUrl, setSoftwareVideoUrl] = useState('');\r\n  const [softwareDescription, setSoftwareDescription] = useState('');\r\n  const [softwareHomepage, setSoftwareHomepage] = useState('');\r\n  const [softwarePlatform, setSoftwarePlatform] = useState('Windows');\r\n  const [isActiveDevelopment, setIsActiveDevelopment] = useState(true);\r\n  const [pricing, setPricing] = useState('Free');\r\n  const [buildOn, setBuildOn] = useState('');\r\n  const [developedBy, setDevelopedBy] = useState('');\r\n  const [maintainedBy, setMaintainedBy] = useState('');\r\n  const [twitterUsername, setTwitterUsername] = useState('');\r\n  const [tags, setTags] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { handleNotification } = useNotification();\r\n\r\n  const { currentUser } = useAuth();\r\n\r\n  const splitByNewLineToArrayAndRemoveEmptyElement = (stringObject) => stringObject.split('\\n').filter((item) => item);\r\n\r\n  const handleSubmit = async (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return false;\r\n    }\r\n\r\n    setValidated(false);\r\n\r\n    let compiledObject = {};\r\n\r\n    if (altSoftwareNames) {\r\n      const altArray = splitByNewLineToArrayAndRemoveEmptyElement(altSoftwareNames);\r\n      compiledObject.alternativeNames = altArray;\r\n    }\r\n    if (\r\n      softwareVideoUrl\r\n      && !isURL(softwareVideoUrl, {\r\n        protocols: ['http', 'https'],\r\n        host_whitelist: ALLOWED_VIDEO_HOST_WHITELIST,\r\n      })\r\n    ) {\r\n      handleNotification(\r\n        'The input Software Video URL is an invalid url. Please ensure the input Software Video URL is valid. Note: Only youtube.com or vimeo.com video providers are supported. An example: https://vimeo.com/573268564',\r\n        'danger',\r\n      );\r\n      return false;\r\n    }\r\n    if (buildOn) {\r\n      const buildOnArray = splitByNewLineToArrayAndRemoveEmptyElement(buildOn);\r\n      compiledObject.buildOn = buildOnArray;\r\n    }\r\n    if (\r\n      softwareHomepage\r\n      && !isURL(softwareHomepage, {\r\n        protocols: ['http', 'https'],\r\n      })\r\n    ) {\r\n      handleNotification(\r\n        'The input Software Homepage is an invalid url. Please ensure the input Software Homepage url is valid.',\r\n        'danger',\r\n      );\r\n      return false;\r\n    }\r\n    if (shortDescription.length === 0 || shortDescription.length > 100) {\r\n      handleNotification(\r\n        'Please input the software short description and ensure that it only contains between 1 to 100 (inclusive) characters.',\r\n        'danger',\r\n      );\r\n      return false;\r\n    }\r\n    if (developedBy) {\r\n      const developedByArray = splitByNewLineToArrayAndRemoveEmptyElement(developedBy);\r\n      compiledObject.developedBy = developedByArray;\r\n    }\r\n    if (maintainedBy) {\r\n      const maintainedByArray = splitByNewLineToArrayAndRemoveEmptyElement(maintainedBy);\r\n      compiledObject.maintainedBy = maintainedByArray;\r\n    }\r\n    if (tags) {\r\n      const tagsArray = splitByNewLineToArrayAndRemoveEmptyElement(tags);\r\n      compiledObject.meta = {\r\n        ...compiledObject.meta,\r\n        tags: tagsArray,\r\n      };\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const softwareNameAvailability = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND_API}search/software?q=${softwareName}`,\r\n      );\r\n      if (\r\n        softwareName.toLowerCase() !== initialSoftwareName\r\n        && softwareNameAvailability.data.queryResponse.filter(\r\n          (item) => item.name.toLowerCase() === softwareName.toLowerCase(),\r\n        ).length > 0\r\n      ) {\r\n        handleNotification(\r\n          'The software name is already in use. Please input a different software name.',\r\n          'danger',\r\n        );\r\n        return false;\r\n      }\r\n\r\n      compiledObject = {\r\n        ...compiledObject,\r\n        name: softwareName,\r\n        version: softwareVersion,\r\n        shortDescription,\r\n        videoLink: softwareVideoUrl,\r\n        description: softwareDescription,\r\n        homePage: softwareHomepage,\r\n        platform: softwarePlatform,\r\n        isActiveDevelopment,\r\n        pricing,\r\n        twitterUsername,\r\n      };\r\n\r\n      console.log(compiledObject);\r\n\r\n      const retrievedIdToken = await currentUser.getIdToken();\r\n      await axios.patch(\r\n        `${process.env.REACT_APP_BACKEND_API}software/${id}`,\r\n        compiledObject,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${retrievedIdToken}`,\r\n          },\r\n        },\r\n      );\r\n      handleNotification('Software successfully edited.', 'success');\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleNotification('Edit Software not successful.', 'danger');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_BACKEND_API}software/${id}`)\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        setInitialSoftwareName(data.name);\r\n        setSoftwareName(data.name);\r\n        setAltSoftwareNames(data.alternativeNames.join('\\n'));\r\n        setSoftwareVersion(data.version);\r\n        setShortDescription(data.shortDescription);\r\n        setSoftwareVideoUrl(data.videoLink);\r\n        setSoftwareDescription(data.description);\r\n        setSoftwareHomepage(data.homePage);\r\n        setSoftwarePlatform(parseSoftwarePlatform(data.platform));\r\n        setIsActiveDevelopment(data.isActiveDevelopment);\r\n        setPricing(parseSoftwarePricing(data.pricing));\r\n        setBuildOn(data.buildOn.join('\\n'));\r\n        setDevelopedBy(data.developedBy.join('\\n'));\r\n        setMaintainedBy(data.maintainedBy.join('\\n'));\r\n        setTwitterUsername(data.twitterUsername);\r\n        setTags(data.meta.tags.join('\\n'));\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"name\">\r\n            <Form.Label>Software Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Software Name\"\r\n              value={softwareName}\r\n              onChange={(event) => {\r\n                setSoftwareName(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the software name.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"altSoftwareNames\">\r\n            <Form.Label>Alternative Software Name(s)</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Enter each Alternative Software Name on a new line.\"\r\n              rows={5}\r\n              value={altSoftwareNames}\r\n              onChange={(event) => {\r\n                setAltSoftwareNames(event.target.value);\r\n              }}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Each input alternative software names must be on a new line.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"version\">\r\n            <Form.Label>Software Version</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Software Version\"\r\n              value={softwareVersion}\r\n              onChange={(event) => {\r\n                setSoftwareVersion(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Please input the latest version of the software.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"shortDescription\">\r\n            <Form.Label>Software Short Description</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Enter Software Short Description\"\r\n              maxLength={100}\r\n              rows={5}\r\n              value={shortDescription}\r\n              onChange={(event) => {\r\n                setShortDescription(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              The input software short description allowed maximum length is 100\r\n              characters.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the software short description and ensure that it\r\n              only contains between 1 to 100 (inclusive) characters.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"videoLink\">\r\n            <Form.Label>Software Video URL</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Software Video URL\"\r\n              value={softwareVideoUrl}\r\n              onChange={(event) => {\r\n                setSoftwareVideoUrl(event.target.value);\r\n              }}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Note: Only youtube.com or vimeo.com video providers are supported.\r\n              An example: https://vimeo.com/573268564\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input a valid url. An example: https://github.com/user/repo\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"description\">\r\n            <Form.Label>Software Description</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Enter Software Description\"\r\n              rows={5}\r\n              value={softwareDescription}\r\n              onChange={(event) => {\r\n                setSoftwareDescription(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the software description.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"homepage\">\r\n            <Form.Label>Software Homepage URL</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Software Homepage URL\"\r\n              value={softwareHomepage}\r\n              onChange={(event) => {\r\n                setSoftwareHomepage(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input a valid url. An example: https://github.com/user/repo\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"platform\">\r\n            <Form.Label>Platform</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={softwarePlatform}\r\n              onChange={(event) => {\r\n                setSoftwarePlatform(event.target.value);\r\n              }}\r\n              required\r\n            >\r\n              <option>Windows</option>\r\n              <option>Linux</option>\r\n              <option>MacOS</option>\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please select the software platform.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"isActiveDevelopment\">\r\n            <Form.Label>Active Development</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={isActiveDevelopment ? '1' : '0'}\r\n              onChange={(event) => {\r\n                setIsActiveDevelopment(Boolean(Number(event.target.value)));\r\n              }}\r\n              required\r\n            >\r\n              <option value=\"1\">True</option>\r\n              <option value=\"0\">False</option>\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the active development status.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"pricing\">\r\n            <Form.Label>Pricing</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={pricing}\r\n              onChange={(event) => {\r\n                setPricing(event.target.value);\r\n              }}\r\n              required\r\n            >\r\n              {Array.from(availablePricing).map((price, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <option key={index}>{_.startCase(price)}</option>\r\n              ))}\r\n            </Form.Control>\r\n            <Form.Text className=\"text-muted\">\r\n              Please select the appropriate software pricing model that best\r\n              matches the software.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the software pricing model.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"buildOn\">\r\n            <Form.Label>Build On</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder={\r\n                'Enter each input must be on a new line.\\nAn example:\\nPython\\nNode.js\\n'\r\n              }\r\n              rows={5}\r\n              value={buildOn}\r\n              onChange={(event) => {\r\n                setBuildOn(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Each input must be on a new line.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the technologies which the software is build on.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"developedBy\">\r\n            <Form.Label>Developed By</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder={\r\n                'Enter each input must be on a new line.\\nAn example: \\nAlex\\nBob\\n'\r\n              }\r\n              rows={5}\r\n              value={developedBy}\r\n              onChange={(event) => {\r\n                setDevelopedBy(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Each input must be on a new line.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the developer(s) of the software.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"maintainedBy\">\r\n            <Form.Label>Maintained By</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder={\r\n                'Enter each input must be on a new line.\\nAn example: \\nAlex\\nBob\\n'\r\n              }\r\n              rows={5}\r\n              value={maintainedBy}\r\n              onChange={(event) => {\r\n                setMaintainedBy(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Each input must be on a new line.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the maintainer(s) of the software. The maintainer(s)\r\n              can be same as the developer(s).\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"twitterUsername\">\r\n            <Form.Label>Software Twitter Username</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Text>\r\n                <AiOutlineTwitter />\r\n              </InputGroup.Text>\r\n              <Form.Control placeholder=\"Enter Software Twitter Username\" value={twitterUsername} onChange={(event) => setTwitterUsername(event.target.value)} />\r\n            </InputGroup>\r\n            <Form.Text className=\"text-muted\">\r\n              Please input the software Twitter username if any.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"inputTags\">\r\n            <Form.Label>Tags</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder={\r\n                'Enter each tag must be on a new line.\\nAn example: \\npython\\ndevtools\\n'\r\n              }\r\n              rows={5}\r\n              value={tags}\r\n              onChange={(event) => {\r\n                setTags(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Each tag must be on a new line.\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please input the tags for the software to be added.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\r\n          {isLoading ? 'Editing Software' : 'Edit Software'}\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSoftwareForm;\r\n","import _ from 'lodash';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport EditSoftwareForm from '../../components/editSoftwareForm/EditSoftwareForm.component';\r\n\r\nconst EditSoftwarePage = () => {\r\n  const { id } = useParams();\r\n  const [softwareObject, setSoftwareObject] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_BACKEND_API}software/${id}`)\r\n      .then((response) => setSoftwareObject(response.data));\r\n  }, [id]);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          Software Repository | Edit Software |{' '}\r\n          {_.startCase(softwareObject.name)}\r\n        </title>\r\n      </Helmet>\r\n      <Row className=\"justify-content-center mt-5\">\r\n        <Col md={8} xl={6}>\r\n          <EditSoftwareForm />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditSoftwarePage;\r\n","import { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport NavBar from './components/navBar/NavBar.component';\r\nimport LoginPage from './pages/loginPage/LoginPage.component';\r\nimport HomePage from './pages/homePage/HomePage.component';\r\nimport RegisterPage from './pages/registerPage/RegisterPage.component';\r\nimport Footer from './components/footer/Footer.component';\r\nimport ResetPasswordPage from './pages/resetPasswordPage/ResetPasswordPage.component';\r\nimport { useAuth } from './contexts/auth/Auth.context';\r\nimport ProfilePage from './pages/profilePage/ProfilePage.component';\r\nimport SettingsPage from './pages/settingsPage/SettingsPage.component';\r\nimport Notification from './components/notification/Notification.component';\r\nimport ProtectedRoute from './components/protectedRoute/ProtectedRoute.component';\r\nimport UsernamePrompt from './components/usernamePrompt/UsernamePrompt.component';\r\nimport AddSoftwarePage from './pages/addSoftwarePage/AddSoftwarePage.component';\r\nimport SoftwareInformationPage from './pages/softwareInformationPage/SoftwareInformationPage.component';\r\nimport NotFoundPage from './pages/notFoundPage/NotFoundPage.component';\r\n\r\nimport './App.css';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport EditSoftwarePage from './pages/EditSoftwarePage/EditSoftwarePage.component';\r\n\r\nfunction App() {\r\n  const {\r\n    currentUser, preventRedirect, customClaims, preventUsernamePrompt,\r\n  } = useAuth();\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Helmet>\r\n        <title>Software Repository</title>\r\n      </Helmet>\r\n      <div className=\"content\">\r\n        <NavBar />\r\n        <Notification />\r\n        {currentUser\r\n        && !preventUsernamePrompt\r\n        && customClaims\r\n        && !customClaims.username ? (\r\n          <UsernamePrompt />\r\n          ) : null}\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route exact path=\"/login\">\r\n            {currentUser ? <Redirect to=\"/\" /> : <LoginPage />}\r\n          </Route>\r\n          <Route exact path=\"/register\">\r\n            {currentUser && !preventRedirect ? (\r\n              <Redirect to=\"/\" />\r\n            ) : (\r\n              <RegisterPage />\r\n            )}\r\n          </Route>\r\n          <Route exact path=\"/reset-password\">\r\n            {currentUser ? <Redirect to=\"/\" /> : <ResetPasswordPage />}\r\n          </Route>\r\n          <Route exact path=\"/software/:id\">\r\n            <SoftwareInformationPage />\r\n          </Route>\r\n          <ProtectedRoute exact path=\"/profile\" component={ProfilePage} />\r\n          <ProtectedRoute exact path=\"/settings\" component={SettingsPage} />\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/edit/software/add\"\r\n            component={AddSoftwarePage}\r\n          />\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/edit/software/:id\"\r\n            component={EditSoftwarePage}\r\n          />\r\n          <Route path=\"*\">\r\n            <NotFoundPage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n      <div className=\"d-flex align-items-center footer\">\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { AuthProvider } from './contexts/auth/Auth.context';\r\nimport { NotificationProvider } from './contexts/notification/Notification.context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <HelmetProvider>\r\n        <NotificationProvider>\r\n          <AuthProvider>\r\n            <App />\r\n          </AuthProvider>\r\n        </NotificationProvider>\r\n      </HelmetProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}